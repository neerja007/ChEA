/* Detect-zoom
 * -----------
 * Cross Browser Zoom and Pixel Ratio Detector
 * Version 1.0.4 | Apr 1 2013
 * dual-licensed under the WTFPL and MIT license
 * Maintained by https://github/tombigel
 * Original developer https://github.com/yonran
 */

//AMD and CommonJS initialization copied from https://github.com/zohararad/audio5js
(function (root, ns, factory) {
    "use strict";

    if (typeof (module) !== 'undefined' && module.exports) { // CommonJS
        module.exports = factory(ns, root);
    } else if (typeof (define) === 'function' && define.amd) { // AMD
        define("factory", function () {
            return factory(ns, root);
        });
    } else {
        root[ns] = factory(ns, root);
    }

}(window, 'detectZoom', function () {

    /**
     * Use devicePixelRatio if supported by the browser
     * @return {Number}
     * @private
     */
    var devicePixelRatio = function () {
        return window.devicePixelRatio || 1;
    };

    /**
     * Fallback function to set default values
     * @return {Object}
     * @private
     */
    var fallback = function () {
        return {
            zoom: 1,
            devicePxPerCssPx: 1
        };
    };
    /**
     * IE 8 and 9: no trick needed!
     * TODO: Test on IE10 and Windows 8 RT
     * @return {Object}
     * @private
     **/
    var ie8 = function () {
        var zoom = Math.round((screen.deviceXDPI / screen.logicalXDPI) * 100) / 100;
        return {
            zoom: zoom,
            devicePxPerCssPx: zoom * devicePixelRatio()
        };
    };

    /**
     * For IE10 we need to change our technique again...
     * thanks https://github.com/stefanvanburen
     * @return {Object}
     * @private
     */
    var ie10 = function () {
        var zoom = Math.round((document.documentElement.offsetHeight / window.innerHeight) * 100) / 100;
        return {
            zoom: zoom,
            devicePxPerCssPx: zoom * devicePixelRatio()
        };
    };

    /**
     * Mobile WebKit
     * the trick: window.innerWIdth is in CSS pixels, while
     * screen.width and screen.height are in system pixels.
     * And there are no scrollbars to mess up the measurement.
     * @return {Object}
     * @private
     */
    var webkitMobile = function () {
        var deviceWidth = (Math.abs(window.orientation) == 90) ? screen.height : screen.width;
        var zoom = deviceWidth / window.innerWidth;
        return {
            zoom: zoom,
            devicePxPerCssPx: zoom * devicePixelRatio()
        };
    };

    /**
     * Desktop Webkit
     * the trick: an element's clientHeight is in CSS pixels, while you can
     * set its line-height in system pixels using font-size and
     * -webkit-text-size-adjust:none.
     * device-pixel-ratio: http://www.webkit.org/blog/55/high-dpi-web-sites/
     *
     * Previous trick (used before http://trac.webkit.org/changeset/100847):
     * documentElement.scrollWidth is in CSS pixels, while
     * document.width was in system pixels. Note that this is the
     * layout width of the document, which is slightly different from viewport
     * because document width does not include scrollbars and might be wider
     * due to big elements.
     * @return {Object}
     * @private
     */
    var webkit = function () {
        var important = function (str) {
            return str.replace(/;/g, " !important;");
        };

        var div = document.createElement('div');
        div.innerHTML = "1<br>2<br>3<br>4<br>5<br>6<br>7<br>8<br>9<br>0";
        div.setAttribute('style', important('font: 100px/1em sans-serif; -webkit-text-size-adjust: none; text-size-adjust: none; height: auto; width: 1em; padding: 0; overflow: visible;'));

        // The container exists so that the div will be laid out in its own flow
        // while not impacting the layout, viewport size, or display of the
        // webpage as a whole.
        // Add !important and relevant CSS rule resets
        // so that other rules cannot affect the results.
        var container = document.createElement('div');
        container.setAttribute('style', important('width:0; height:0; overflow:hidden; visibility:hidden; position: absolute;'));
        container.appendChild(div);

        document.body.appendChild(container);
        var zoom = 1000 / div.clientHeight;
        zoom = Math.round(zoom * 100) / 100;
        document.body.removeChild(container);

        return{
            zoom: zoom,
            devicePxPerCssPx: zoom * devicePixelRatio()
        };
    };

    /**
     * no real trick; device-pixel-ratio is the ratio of device dpi / css dpi.
     * (Note that this is a different interpretation than Webkit's device
     * pixel ratio, which is the ratio device dpi / system dpi).
     *
     * Also, for Mozilla, there is no difference between the zoom factor and the device ratio.
     *
     * @return {Object}
     * @private
     */
    var firefox4 = function () {
        var zoom = mediaQueryBinarySearch('min--moz-device-pixel-ratio', '', 0, 10, 20, 0.0001);
        zoom = Math.round(zoom * 100) / 100;
        return {
            zoom: zoom,
            devicePxPerCssPx: zoom
        };
    };

    /**
     * Firefox 18.x
     * Mozilla added support for devicePixelRatio to Firefox 18,
     * but it is affected by the zoom level, so, like in older
     * Firefox we can't tell if we are in zoom mode or in a device
     * with a different pixel ratio
     * @return {Object}
     * @private
     */
    var firefox18 = function () {
        return {
            zoom: firefox4().zoom,
            devicePxPerCssPx: devicePixelRatio()
        };
    };

    /**
     * works starting Opera 11.11
     * the trick: outerWidth is the viewport width including scrollbars in
     * system px, while innerWidth is the viewport width including scrollbars
     * in CSS px
     * @return {Object}
     * @private
     */
    var opera11 = function () {
        var zoom = window.top.outerWidth / window.top.innerWidth;
        zoom = Math.round(zoom * 100) / 100;
        return {
            zoom: zoom,
            devicePxPerCssPx: zoom * devicePixelRatio()
        };
    };

    /**
     * Use a binary search through media queries to find zoom level in Firefox
     * @param property
     * @param unit
     * @param a
     * @param b
     * @param maxIter
     * @param epsilon
     * @return {Number}
     */
    var mediaQueryBinarySearch = function (property, unit, a, b, maxIter, epsilon) {
        var matchMedia;
        var head, style, div;
        if (window.matchMedia) {
            matchMedia = window.matchMedia;
        } else {
            head = document.getElementsByTagName('head')[0];
            style = document.createElement('style');
            head.appendChild(style);

            div = document.createElement('div');
            div.className = 'mediaQueryBinarySearch';
            div.style.display = 'none';
            document.body.appendChild(div);

            matchMedia = function (query) {
                style.sheet.insertRule('@media ' + query + '{.mediaQueryBinarySearch ' + '{text-decoration: underline} }', 0);
                var matched = getComputedStyle(div, null).textDecoration == 'underline';
                style.sheet.deleteRule(0);
                return {matches: matched};
            };
        }
        var ratio = binarySearch(a, b, maxIter);
        if (div) {
            head.removeChild(style);
            document.body.removeChild(div);
        }
        return ratio;

        function binarySearch(a, b, maxIter) {
            var mid = (a + b) / 2;
            if (maxIter <= 0 || b - a < epsilon) {
                return mid;
            }
            var query = "(" + property + ":" + mid + unit + ")";
            if (matchMedia(query).matches) {
                return binarySearch(mid, b, maxIter - 1);
            } else {
                return binarySearch(a, mid, maxIter - 1);
            }
        }
    };

    /**
     * Generate detection function
     * @private
     */
    var detectFunction = (function () {
        var func = fallback;
        //IE8+
        if (!isNaN(screen.logicalXDPI) && !isNaN(screen.systemXDPI)) {
            func = ie8;
        }
        // IE10+ / Touch
        else if (window.navigator.msMaxTouchPoints) {
            func = ie10;
        }
        //Mobile Webkit
        else if ('orientation' in window && typeof document.body.style.webkitMarquee === 'string') {
            func = webkitMobile;
        }
        //WebKit
        else if (typeof document.body.style.webkitMarquee === 'string') {
            func = webkit;
        }
        //Opera
        else if (navigator.userAgent.indexOf('Opera') >= 0) {
            func = opera11;
        }
        //Last one is Firefox
        //FF 18.x
        else if (window.devicePixelRatio) {
            func = firefox18;
        }
        //FF 4.0 - 17.x
        else if (firefox4().zoom > 0.001) {
            func = firefox4;
        }

        return func;
    }());


    return ({

        /**
         * Ratios.zoom shorthand
         * @return {Number} Zoom level
         */
        zoom: function () {
            return detectFunction().zoom;
        },

        /**
         * Ratios.devicePxPerCssPx shorthand
         * @return {Number} devicePxPerCssPx level
         */
        device: function () {
            return detectFunction().devicePxPerCssPx;
        }
    });
}));

var wpcom_img_zoomer = {
	zoomed: false,
	timer: null,
	interval: 1000, // zoom polling interval in millisecond

	// Should we apply width/height attributes to control the image size?
	imgNeedsSizeAtts: function( img ) {
		// Do not overwrite existing width/height attributes.
		if ( img.getAttribute('width') !== null || img.getAttribute('height') !== null )
			return false;
		// Do not apply the attributes if the image is already constrained by a parent element.
		if ( img.width < img.naturalWidth || img.height < img.naturalHeight )
			return false;
		return true;
	},

	init: function() {
		var t = this;
		try{
			t.zoomImages();
			t.timer = setInterval( function() { t.zoomImages(); }, t.interval );
		}
		catch(e){
		}
	},

	stop: function() {
		if ( this.timer )
			clearInterval( this.timer );
	},

	getScale: function() {
		var scale = detectZoom.device();
		// Round up to 1.5 or the next integer below the cap.
		if      ( scale <= 1.0 ) scale = 1.0;
		else if ( scale <= 1.5 ) scale = 1.5;
		else if ( scale <= 2.0 ) scale = 2.0;
		else if ( scale <= 3.0 ) scale = 3.0;
		else if ( scale <= 4.0 ) scale = 4.0;
		else                     scale = 5.0;
		return scale;
	},

	shouldZoom: function( scale ) {
		var t = this;
		// Do not operate on hidden frames.
		if ( "innerWidth" in window && !window.innerWidth )
			return false;
		// Don't do anything until scale > 1
		if ( scale == 1.0 && t.zoomed == false )
			return false;
		return true;
	},

	zoomImages: function() {
		var t = this;
		var scale = t.getScale();
		if ( ! t.shouldZoom( scale ) ){
			return;
		}
		t.zoomed = true;
		// Loop through all the <img> elements on the page.
		var imgs = document.getElementsByTagName("img");

		for ( var i = 0; i < imgs.length; i++ ) {
			// Skip images that don't need processing.
			var imgScale = imgs[i].getAttribute("scale");
			if ( imgScale == scale || imgScale == "0" )
				continue;

			// Skip images that have already failed at this scale
			var scaleFail = imgs[i].getAttribute("scale-fail");
			if ( scaleFail && scaleFail <= scale )
				continue;

			// Skip images that have no dimensions yet.
			if ( ! ( imgs[i].width && imgs[i].height ) )
				continue;

			if ( t.scaleImage( imgs[i], scale ) ) {
				// Mark the img as having been processed at this scale.
				imgs[i].setAttribute("scale", scale);
			}
			else {
				// Set the flag to skip this image.
				imgs[i].setAttribute("scale", "0");
			}
		}
	},

	scaleImage: function( img, scale ) {
		var t = this;
		var newSrc = img.src;

		// Skip slideshow images
		if ( img.parentNode.className.match(/slideshow-slide/) )
			return false;

		// Scale gravatars that have ?s= or ?size=
		if ( img.src.match( /^https?:\/\/([^\/]*\.)?gravatar\.com\/.+[?&](s|size)=/ ) ) {
			newSrc = img.src.replace( /([?&](s|size)=)(\d+)/, function( $0, $1, $2, $3 ) {
				// Stash the original size
				var originalAtt = "originals",
				originalSize = img.getAttribute(originalAtt);
				if ( originalSize === null ) {
					originalSize = $3;
					img.setAttribute(originalAtt, originalSize);
					if ( t.imgNeedsSizeAtts( img ) ) {
						// Fix width and height attributes to rendered dimensions.
						img.width = img.width;
						img.height = img.height;
					}
				}
				// Get the width/height of the image in CSS pixels
				var size = img.clientWidth;
				// Convert CSS pixels to device pixels
				var targetSize = Math.ceil(img.clientWidth * scale);
				// Don't go smaller than the original size
				targetSize = Math.max( targetSize, originalSize );
				// Don't go larger than the service supports
				targetSize = Math.min( targetSize, 512 );
				return $1 + targetSize;
			});
		}

		// Scale resize queries (*.files.wordpress.com) that have ?w= or ?h=
		else if ( img.src.match( /^https?:\/\/([^\/]+)\.files\.wordpress\.com\/.+[?&][wh]=/ ) ) {
			if ( img.src.match( /[?&]crop/ ) )
				return false;
			var changedAttrs = {};
			var matches = img.src.match( /([?&]([wh])=)(\d+)/g );
			for ( var i = 0; i < matches.length; i++ ) {
				var lr = matches[i].split( '=' );
				var thisAttr = lr[0].replace(/[?&]/g, '' );
				var thisVal = lr[1];

				// Stash the original size
				var originalAtt = 'original' + thisAttr, originalSize = img.getAttribute( originalAtt );
				if ( originalSize === null ) {
					originalSize = thisVal;
					img.setAttribute(originalAtt, originalSize);
					if ( t.imgNeedsSizeAtts( img ) ) {
						// Fix width and height attributes to rendered dimensions.
						img.width = img.width;
						img.height = img.height;
					}
				}
				// Get the width/height of the image in CSS pixels
				var size = thisAttr == 'w' ? img.clientWidth : img.clientHeight;
				var naturalSize = ( thisAttr == 'w' ? img.naturalWidth : img.naturalHeight );
				// Convert CSS pixels to device pixels
				var targetSize = Math.ceil(size * scale);
				// Don't go smaller than the original size
				targetSize = Math.max( targetSize, originalSize );
				// Don't go bigger unless the current one is actually lacking
				if ( scale > img.getAttribute("scale") && targetSize <= naturalSize )
					targetSize = thisVal;
				// Don't try to go bigger if the image is already smaller than was requested
				if ( naturalSize < thisVal )
					targetSize = thisVal;
				if ( targetSize != thisVal )
					changedAttrs[ thisAttr ] = targetSize;
			}
			var w = changedAttrs.w || false;
			var h = changedAttrs.h || false;

			if ( w ) {
				newSrc = img.src.replace(/([?&])w=\d+/g, function( $0, $1 ) {
					return $1 + 'w=' + w;
				});
			}			
			if ( h ) {
				newSrc = newSrc.replace(/([?&])h=\d+/g, function( $0, $1 ) {
					return $1 + 'h=' + h;
				});
			}
		}

		// Scale mshots that have width
		else if ( img.src.match(/^https?:\/\/([^\/]+\.)*(wordpress|wp)\.com\/mshots\/.+[?&]w=\d+/) ) {
			newSrc = img.src.replace( /([?&]w=)(\d+)/, function($0, $1, $2) {
				// Stash the original size
				var originalAtt = 'originalw', originalSize = img.getAttribute(originalAtt);
				if ( originalSize === null ) {
					originalSize = $2;
					img.setAttribute(originalAtt, originalSize);
					if ( t.imgNeedsSizeAtts( img ) ) {
						// Fix width and height attributes to rendered dimensions.
						img.width = img.width;
						img.height = img.height;
					}
				}
				// Get the width of the image in CSS pixels
				var size = img.clientWidth;
				// Convert CSS pixels to device pixels
				var targetSize = Math.ceil(size * scale);
				// Don't go smaller than the original size
				targetSize = Math.max( targetSize, originalSize );
				// Don't go bigger unless the current one is actually lacking
				if ( scale > img.getAttribute("scale") && targetSize <= img.naturalWidth )
					targetSize = $2;
				if ( $2 != targetSize )
					return $1 + targetSize;
				return $0;
			});
		}

		// Scale simple imgpress queries (s0.wp.com) that only specify w/h/fit
		else if ( img.src.match(/^https?:\/\/([^\/.]+\.)*(wp|wordpress)\.com\/imgpress\?(.+)/) ) {
			var imgpressSafeFunctions = ["zoom", "url", "h", "w", "fit", "filter", "brightness", "contrast", "colorize", "smooth", "unsharpmask"];
			// Search the query string for unsupported functions.
			var qs = RegExp.$3.split('&');
			for ( var q in qs ) {
				q = qs[q].split('=')[0];
				if ( imgpressSafeFunctions.indexOf(q) == -1 ) {
					return false;
				}
			}
			// Fix width and height attributes to rendered dimensions.
			img.width = img.width;
			img.height = img.height;
			// Compute new src
			if ( scale == 1 )
				newSrc = img.src.replace(/\?(zoom=[^&]+&)?/, '?');
			else
				newSrc = img.src.replace(/\?(zoom=[^&]+&)?/, '?zoom=' + scale + '&');
		}

		// Scale LaTeX images or Photon queries (i#.wp.com)
		else if (
			img.src.match(/^https?:\/\/([^\/.]+\.)*(wp|wordpress)\.com\/latex\.php\?(latex|zoom)=(.+)/) ||
			img.src.match(/^https?:\/\/i[\d]{1}\.wp\.com\/(.+)/)
		) {
			// Fix width and height attributes to rendered dimensions.
			img.width = img.width;
			img.height = img.height;
			// Compute new src
			if ( scale == 1 )
				newSrc = img.src.replace(/\?(zoom=[^&]+&)?/, '?');
			else
				newSrc = img.src.replace(/\?(zoom=[^&]+&)?/, '?zoom=' + scale + '&');
		}

		// Scale static assets that have a name matching *-1x.png or *@1x.png
		else if ( img.src.match(/^https?:\/\/[^\/]+\/.*[-@]([12])x\.(gif|jpeg|jpg|png)(\?|$)/) ) {
			// Fix width and height attributes to rendered dimensions.
			img.width = img.width;
			img.height = img.height;
			var currentSize = RegExp.$1, newSize = currentSize;
			if ( scale <= 1 )
				newSize = 1;
			else
				newSize = 2;
			if ( currentSize != newSize )
				newSrc = img.src.replace(/([-@])[12]x\.(gif|jpeg|jpg|png)(\?|$)/, '$1'+newSize+'x.$2$3');
		}

		else {
			return false;
		}

		// Don't set img.src unless it has changed. This avoids unnecessary reloads.
		if ( newSrc != img.src ) {
			// Store the original img.src
			var prevSrc, origSrc = img.getAttribute("src-orig");
			if ( !origSrc ) {
				origSrc = img.src;
				img.setAttribute("src-orig", origSrc);
			}
			// In case of error, revert img.src
			if ( img.complete )
				prevSrc = img.src;
			else
				prevSrc = origSrc;
			img.onerror = function(){
				img.src = prevSrc;
				if ( img.getAttribute("scale-fail") < scale )
					img.setAttribute("scale-fail", scale);
				img.onerror = null;
			};
			// Finally load the new image
			img.src = newSrc;
		}

		return true;
	}
};

wpcom_img_zoomer.init();
;
//     Underscore.js 1.4.4
//     http://underscorejs.org
//     (c) 2009-2013 Jeremy Ashkenas, DocumentCloud Inc.
//     Underscore may be freely distributed under the MIT license.
(function(){var n=this,t=n._,r={},e=Array.prototype,u=Object.prototype,i=Function.prototype,a=e.push,o=e.slice,c=e.concat,l=u.toString,f=u.hasOwnProperty,s=e.forEach,p=e.map,h=e.reduce,v=e.reduceRight,d=e.filter,g=e.every,m=e.some,y=e.indexOf,b=e.lastIndexOf,x=Array.isArray,_=Object.keys,j=i.bind,w=function(n){return n instanceof w?n:this instanceof w?(this._wrapped=n,void 0):new w(n)};"undefined"!=typeof exports?("undefined"!=typeof module&&module.exports&&(exports=module.exports=w),exports._=w):n._=w,w.VERSION="1.4.4";var A=w.each=w.forEach=function(n,t,e){if(null!=n)if(s&&n.forEach===s)n.forEach(t,e);else if(n.length===+n.length){for(var u=0,i=n.length;i>u;u++)if(t.call(e,n[u],u,n)===r)return}else for(var a in n)if(w.has(n,a)&&t.call(e,n[a],a,n)===r)return};w.map=w.collect=function(n,t,r){var e=[];return null==n?e:p&&n.map===p?n.map(t,r):(A(n,function(n,u,i){e[e.length]=t.call(r,n,u,i)}),e)};var O="Reduce of empty array with no initial value";w.reduce=w.foldl=w.inject=function(n,t,r,e){var u=arguments.length>2;if(null==n&&(n=[]),h&&n.reduce===h)return e&&(t=w.bind(t,e)),u?n.reduce(t,r):n.reduce(t);if(A(n,function(n,i,a){u?r=t.call(e,r,n,i,a):(r=n,u=!0)}),!u)throw new TypeError(O);return r},w.reduceRight=w.foldr=function(n,t,r,e){var u=arguments.length>2;if(null==n&&(n=[]),v&&n.reduceRight===v)return e&&(t=w.bind(t,e)),u?n.reduceRight(t,r):n.reduceRight(t);var i=n.length;if(i!==+i){var a=w.keys(n);i=a.length}if(A(n,function(o,c,l){c=a?a[--i]:--i,u?r=t.call(e,r,n[c],c,l):(r=n[c],u=!0)}),!u)throw new TypeError(O);return r},w.find=w.detect=function(n,t,r){var e;return E(n,function(n,u,i){return t.call(r,n,u,i)?(e=n,!0):void 0}),e},w.filter=w.select=function(n,t,r){var e=[];return null==n?e:d&&n.filter===d?n.filter(t,r):(A(n,function(n,u,i){t.call(r,n,u,i)&&(e[e.length]=n)}),e)},w.reject=function(n,t,r){return w.filter(n,function(n,e,u){return!t.call(r,n,e,u)},r)},w.every=w.all=function(n,t,e){t||(t=w.identity);var u=!0;return null==n?u:g&&n.every===g?n.every(t,e):(A(n,function(n,i,a){return(u=u&&t.call(e,n,i,a))?void 0:r}),!!u)};var E=w.some=w.any=function(n,t,e){t||(t=w.identity);var u=!1;return null==n?u:m&&n.some===m?n.some(t,e):(A(n,function(n,i,a){return u||(u=t.call(e,n,i,a))?r:void 0}),!!u)};w.contains=w.include=function(n,t){return null==n?!1:y&&n.indexOf===y?n.indexOf(t)!=-1:E(n,function(n){return n===t})},w.invoke=function(n,t){var r=o.call(arguments,2),e=w.isFunction(t);return w.map(n,function(n){return(e?t:n[t]).apply(n,r)})},w.pluck=function(n,t){return w.map(n,function(n){return n[t]})},w.where=function(n,t,r){return w.isEmpty(t)?r?null:[]:w[r?"find":"filter"](n,function(n){for(var r in t)if(t[r]!==n[r])return!1;return!0})},w.findWhere=function(n,t){return w.where(n,t,!0)},w.max=function(n,t,r){if(!t&&w.isArray(n)&&n[0]===+n[0]&&65535>n.length)return Math.max.apply(Math,n);if(!t&&w.isEmpty(n))return-1/0;var e={computed:-1/0,value:-1/0};return A(n,function(n,u,i){var a=t?t.call(r,n,u,i):n;a>=e.computed&&(e={value:n,computed:a})}),e.value},w.min=function(n,t,r){if(!t&&w.isArray(n)&&n[0]===+n[0]&&65535>n.length)return Math.min.apply(Math,n);if(!t&&w.isEmpty(n))return 1/0;var e={computed:1/0,value:1/0};return A(n,function(n,u,i){var a=t?t.call(r,n,u,i):n;e.computed>a&&(e={value:n,computed:a})}),e.value},w.shuffle=function(n){var t,r=0,e=[];return A(n,function(n){t=w.random(r++),e[r-1]=e[t],e[t]=n}),e};var k=function(n){return w.isFunction(n)?n:function(t){return t[n]}};w.sortBy=function(n,t,r){var e=k(t);return w.pluck(w.map(n,function(n,t,u){return{value:n,index:t,criteria:e.call(r,n,t,u)}}).sort(function(n,t){var r=n.criteria,e=t.criteria;if(r!==e){if(r>e||r===void 0)return 1;if(e>r||e===void 0)return-1}return n.index<t.index?-1:1}),"value")};var F=function(n,t,r,e){var u={},i=k(t||w.identity);return A(n,function(t,a){var o=i.call(r,t,a,n);e(u,o,t)}),u};w.groupBy=function(n,t,r){return F(n,t,r,function(n,t,r){(w.has(n,t)?n[t]:n[t]=[]).push(r)})},w.countBy=function(n,t,r){return F(n,t,r,function(n,t){w.has(n,t)||(n[t]=0),n[t]++})},w.sortedIndex=function(n,t,r,e){r=null==r?w.identity:k(r);for(var u=r.call(e,t),i=0,a=n.length;a>i;){var o=i+a>>>1;u>r.call(e,n[o])?i=o+1:a=o}return i},w.toArray=function(n){return n?w.isArray(n)?o.call(n):n.length===+n.length?w.map(n,w.identity):w.values(n):[]},w.size=function(n){return null==n?0:n.length===+n.length?n.length:w.keys(n).length},w.first=w.head=w.take=function(n,t,r){return null==n?void 0:null==t||r?n[0]:o.call(n,0,t)},w.initial=function(n,t,r){return o.call(n,0,n.length-(null==t||r?1:t))},w.last=function(n,t,r){return null==n?void 0:null==t||r?n[n.length-1]:o.call(n,Math.max(n.length-t,0))},w.rest=w.tail=w.drop=function(n,t,r){return o.call(n,null==t||r?1:t)},w.compact=function(n){return w.filter(n,w.identity)};var R=function(n,t,r){return A(n,function(n){w.isArray(n)?t?a.apply(r,n):R(n,t,r):r.push(n)}),r};w.flatten=function(n,t){return R(n,t,[])},w.without=function(n){return w.difference(n,o.call(arguments,1))},w.uniq=w.unique=function(n,t,r,e){w.isFunction(t)&&(e=r,r=t,t=!1);var u=r?w.map(n,r,e):n,i=[],a=[];return A(u,function(r,e){(t?e&&a[a.length-1]===r:w.contains(a,r))||(a.push(r),i.push(n[e]))}),i},w.union=function(){return w.uniq(c.apply(e,arguments))},w.intersection=function(n){var t=o.call(arguments,1);return w.filter(w.uniq(n),function(n){return w.every(t,function(t){return w.indexOf(t,n)>=0})})},w.difference=function(n){var t=c.apply(e,o.call(arguments,1));return w.filter(n,function(n){return!w.contains(t,n)})},w.zip=function(){for(var n=o.call(arguments),t=w.max(w.pluck(n,"length")),r=Array(t),e=0;t>e;e++)r[e]=w.pluck(n,""+e);return r},w.object=function(n,t){if(null==n)return{};for(var r={},e=0,u=n.length;u>e;e++)t?r[n[e]]=t[e]:r[n[e][0]]=n[e][1];return r},w.indexOf=function(n,t,r){if(null==n)return-1;var e=0,u=n.length;if(r){if("number"!=typeof r)return e=w.sortedIndex(n,t),n[e]===t?e:-1;e=0>r?Math.max(0,u+r):r}if(y&&n.indexOf===y)return n.indexOf(t,r);for(;u>e;e++)if(n[e]===t)return e;return-1},w.lastIndexOf=function(n,t,r){if(null==n)return-1;var e=null!=r;if(b&&n.lastIndexOf===b)return e?n.lastIndexOf(t,r):n.lastIndexOf(t);for(var u=e?r:n.length;u--;)if(n[u]===t)return u;return-1},w.range=function(n,t,r){1>=arguments.length&&(t=n||0,n=0),r=arguments[2]||1;for(var e=Math.max(Math.ceil((t-n)/r),0),u=0,i=Array(e);e>u;)i[u++]=n,n+=r;return i},w.bind=function(n,t){if(n.bind===j&&j)return j.apply(n,o.call(arguments,1));var r=o.call(arguments,2);return function(){return n.apply(t,r.concat(o.call(arguments)))}},w.partial=function(n){var t=o.call(arguments,1);return function(){return n.apply(this,t.concat(o.call(arguments)))}},w.bindAll=function(n){var t=o.call(arguments,1);return 0===t.length&&(t=w.functions(n)),A(t,function(t){n[t]=w.bind(n[t],n)}),n},w.memoize=function(n,t){var r={};return t||(t=w.identity),function(){var e=t.apply(this,arguments);return w.has(r,e)?r[e]:r[e]=n.apply(this,arguments)}},w.delay=function(n,t){var r=o.call(arguments,2);return setTimeout(function(){return n.apply(null,r)},t)},w.defer=function(n){return w.delay.apply(w,[n,1].concat(o.call(arguments,1)))},w.throttle=function(n,t){var r,e,u,i,a=0,o=function(){a=new Date,u=null,i=n.apply(r,e)};return function(){var c=new Date,l=t-(c-a);return r=this,e=arguments,0>=l?(clearTimeout(u),u=null,a=c,i=n.apply(r,e)):u||(u=setTimeout(o,l)),i}},w.debounce=function(n,t,r){var e,u;return function(){var i=this,a=arguments,o=function(){e=null,r||(u=n.apply(i,a))},c=r&&!e;return clearTimeout(e),e=setTimeout(o,t),c&&(u=n.apply(i,a)),u}},w.once=function(n){var t,r=!1;return function(){return r?t:(r=!0,t=n.apply(this,arguments),n=null,t)}},w.wrap=function(n,t){return function(){var r=[n];return a.apply(r,arguments),t.apply(this,r)}},w.compose=function(){var n=arguments;return function(){for(var t=arguments,r=n.length-1;r>=0;r--)t=[n[r].apply(this,t)];return t[0]}},w.after=function(n,t){return 0>=n?t():function(){return 1>--n?t.apply(this,arguments):void 0}},w.keys=_||function(n){if(n!==Object(n))throw new TypeError("Invalid object");var t=[];for(var r in n)w.has(n,r)&&(t[t.length]=r);return t},w.values=function(n){var t=[];for(var r in n)w.has(n,r)&&t.push(n[r]);return t},w.pairs=function(n){var t=[];for(var r in n)w.has(n,r)&&t.push([r,n[r]]);return t},w.invert=function(n){var t={};for(var r in n)w.has(n,r)&&(t[n[r]]=r);return t},w.functions=w.methods=function(n){var t=[];for(var r in n)w.isFunction(n[r])&&t.push(r);return t.sort()},w.extend=function(n){return A(o.call(arguments,1),function(t){if(t)for(var r in t)n[r]=t[r]}),n},w.pick=function(n){var t={},r=c.apply(e,o.call(arguments,1));return A(r,function(r){r in n&&(t[r]=n[r])}),t},w.omit=function(n){var t={},r=c.apply(e,o.call(arguments,1));for(var u in n)w.contains(r,u)||(t[u]=n[u]);return t},w.defaults=function(n){return A(o.call(arguments,1),function(t){if(t)for(var r in t)null==n[r]&&(n[r]=t[r])}),n},w.clone=function(n){return w.isObject(n)?w.isArray(n)?n.slice():w.extend({},n):n},w.tap=function(n,t){return t(n),n};var I=function(n,t,r,e){if(n===t)return 0!==n||1/n==1/t;if(null==n||null==t)return n===t;n instanceof w&&(n=n._wrapped),t instanceof w&&(t=t._wrapped);var u=l.call(n);if(u!=l.call(t))return!1;switch(u){case"[object String]":return n==t+"";case"[object Number]":return n!=+n?t!=+t:0==n?1/n==1/t:n==+t;case"[object Date]":case"[object Boolean]":return+n==+t;case"[object RegExp]":return n.source==t.source&&n.global==t.global&&n.multiline==t.multiline&&n.ignoreCase==t.ignoreCase}if("object"!=typeof n||"object"!=typeof t)return!1;for(var i=r.length;i--;)if(r[i]==n)return e[i]==t;r.push(n),e.push(t);var a=0,o=!0;if("[object Array]"==u){if(a=n.length,o=a==t.length)for(;a--&&(o=I(n[a],t[a],r,e)););}else{var c=n.constructor,f=t.constructor;if(c!==f&&!(w.isFunction(c)&&c instanceof c&&w.isFunction(f)&&f instanceof f))return!1;for(var s in n)if(w.has(n,s)&&(a++,!(o=w.has(t,s)&&I(n[s],t[s],r,e))))break;if(o){for(s in t)if(w.has(t,s)&&!a--)break;o=!a}}return r.pop(),e.pop(),o};w.isEqual=function(n,t){return I(n,t,[],[])},w.isEmpty=function(n){if(null==n)return!0;if(w.isArray(n)||w.isString(n))return 0===n.length;for(var t in n)if(w.has(n,t))return!1;return!0},w.isElement=function(n){return!(!n||1!==n.nodeType)},w.isArray=x||function(n){return"[object Array]"==l.call(n)},w.isObject=function(n){return n===Object(n)},A(["Arguments","Function","String","Number","Date","RegExp"],function(n){w["is"+n]=function(t){return l.call(t)=="[object "+n+"]"}}),w.isArguments(arguments)||(w.isArguments=function(n){return!(!n||!w.has(n,"callee"))}),"function"!=typeof/./&&(w.isFunction=function(n){return"function"==typeof n}),w.isFinite=function(n){return isFinite(n)&&!isNaN(parseFloat(n))},w.isNaN=function(n){return w.isNumber(n)&&n!=+n},w.isBoolean=function(n){return n===!0||n===!1||"[object Boolean]"==l.call(n)},w.isNull=function(n){return null===n},w.isUndefined=function(n){return n===void 0},w.has=function(n,t){return f.call(n,t)},w.noConflict=function(){return n._=t,this},w.identity=function(n){return n},w.times=function(n,t,r){for(var e=Array(n),u=0;n>u;u++)e[u]=t.call(r,u);return e},w.random=function(n,t){return null==t&&(t=n,n=0),n+Math.floor(Math.random()*(t-n+1))};var M={escape:{"&":"&amp;","<":"&lt;",">":"&gt;",'"':"&quot;","'":"&#x27;","/":"&#x2F;"}};M.unescape=w.invert(M.escape);var S={escape:RegExp("["+w.keys(M.escape).join("")+"]","g"),unescape:RegExp("("+w.keys(M.unescape).join("|")+")","g")};w.each(["escape","unescape"],function(n){w[n]=function(t){return null==t?"":(""+t).replace(S[n],function(t){return M[n][t]})}}),w.result=function(n,t){if(null==n)return null;var r=n[t];return w.isFunction(r)?r.call(n):r},w.mixin=function(n){A(w.functions(n),function(t){var r=w[t]=n[t];w.prototype[t]=function(){var n=[this._wrapped];return a.apply(n,arguments),D.call(this,r.apply(w,n))}})};var N=0;w.uniqueId=function(n){var t=++N+"";return n?n+t:t},w.templateSettings={evaluate:/<%([\s\S]+?)%>/g,interpolate:/<%=([\s\S]+?)%>/g,escape:/<%-([\s\S]+?)%>/g};var T=/(.)^/,q={"'":"'","\\":"\\","\r":"r","\n":"n","	":"t","\u2028":"u2028","\u2029":"u2029"},B=/\\|'|\r|\n|\t|\u2028|\u2029/g;w.template=function(n,t,r){var e;r=w.defaults({},r,w.templateSettings);var u=RegExp([(r.escape||T).source,(r.interpolate||T).source,(r.evaluate||T).source].join("|")+"|$","g"),i=0,a="__p+='";n.replace(u,function(t,r,e,u,o){return a+=n.slice(i,o).replace(B,function(n){return"\\"+q[n]}),r&&(a+="'+\n((__t=("+r+"))==null?'':_.escape(__t))+\n'"),e&&(a+="'+\n((__t=("+e+"))==null?'':__t)+\n'"),u&&(a+="';\n"+u+"\n__p+='"),i=o+t.length,t}),a+="';\n",r.variable||(a="with(obj||{}){\n"+a+"}\n"),a="var __t,__p='',__j=Array.prototype.join,"+"print=function(){__p+=__j.call(arguments,'');};\n"+a+"return __p;\n";try{e=Function(r.variable||"obj","_",a)}catch(o){throw o.source=a,o}if(t)return e(t,w);var c=function(n){return e.call(this,n,w)};return c.source="function("+(r.variable||"obj")+"){\n"+a+"}",c},w.chain=function(n){return w(n).chain()};var D=function(n){return this._chain?w(n).chain():n};w.mixin(w),A(["pop","push","reverse","shift","sort","splice","unshift"],function(n){var t=e[n];w.prototype[n]=function(){var r=this._wrapped;return t.apply(r,arguments),"shift"!=n&&"splice"!=n||0!==r.length||delete r[0],D.call(this,r)}}),A(["concat","join","slice"],function(n){var t=e[n];w.prototype[n]=function(){return D.call(this,t.apply(this._wrapped,arguments))}}),w.extend(w.prototype,{chain:function(){return this._chain=!0,this},value:function(){return this._wrapped}})}).call(this);;
(function($, undef){

	/**
	 * DRY-ness is bliss. For all your bumping needs.
	 * @param  {string} name  The stats bucket
	 * @param  {string} value The stats value
	 */
	function bumpStatsExtras( name, value ) {
		var params = {
			v: 'wpcom-no-pv',
			baba: Math.random()
		};
		params[ 'x_' + name ] = value || 1;
		new Image().src = document.location.protocol + '//stats.wordpress.com/g.gif?' + $.param( params );
	}

	var ThemeShowcase = {
		init: function() {
			this.isBrowsing = $( 'body' ).hasClass( 'theme-browsing' );
			this.$activateButton = $( '#activate-button' );
			this.$activateOnBlog = $( '#activate-on-blog' );
			this.addListeners();

			if ( this.isBrowsing ) {
				ShowcaseFilters.init();
				ThemeScroller.init();
				ThemeNav.init();
			} else {
				$.support.pushState = window.history.pushState != null;
				this.$supportDoc = $( '#support-doc' );
				this.hashEvents();
				this.stats();
				this.mobileUI();
				if ( this.$supportDoc.length )
					this.generateTOC();
			}
		},
		activateTheme: function( event ) {
			var data = $( event.target ).data();
			var label = data.isPremium ? themeShowcase.activateForPremium : themeShowcase.activate;
			var phrase = themeShowcase.selectBlog.replace( '%THEME%', data.name );
			var img;
			var $form = $( '#activate-theme' );
			event.preventDefault();

			$form.find( '[name="stylesheet"]' ).val( data.stylesheet );
			$form.find( '[name="template"]' ).val( data.template );
			$form.find( '[name="_wpnonce"]' ).val( data.nonce );

			if ( themeShowcase.singleBlogUser ) {
				$form.submit();
			} else {
				if ( ! $( '#activate-overlay' ).find( 'img' ).length )
					$( '#activate-overlay' ).append( '<img />' );
				img = $( event.target ).closest( '.theme' ).find( 'img' ).attr( 'src' );
				$( '#activate-overlay' ).find( 'img' ).attr( 'src', img );
				this.$activateButton.text( label );
				$( '#select-phrase' ).text( phrase );
				this.activateOverlay();
			}

		},
		addListeners: function() {
			this.$activateOnBlog.change( _.bind( this.maybeShowActivateButton, this ) ).change();
			this.$activateButton.click( _.bind( this.activate, this ) );
			$( '#cancel-overlay' ).click( this.deactivateOverlay );
			if ( this.isBrowsing ) {
				$( 'body.logged-in #theme-grid' ).on('click', '.theme-links > .signup', $.proxy( this.activateTheme, this ) );
				return;
			}

			$( '#start-activation-button' ).click( this.activateOverlay );
			$( '.theme-tabs' ).on( 'click', '.toggle-content', this.toggleSupport );
			if ( $.support.pushState ) {
				$( window ).on( 'popstate', _.bind( this.onPop, this ) );
			}
		},
		hashEvents: function() {
			var hash = window.location.hash.replace(/^\#/, '');
			var hasSupportSegment = window.location.pathname.replace(/\/$/, '').split('/').pop() === 'support';
			if ( hash === 'switch' && $("body").hasClass('single-showcase_theme') )
				$("#start-activation-button").click();

			if ( hash === 'support' || hasSupportSegment )
				this.toggleSupport( { target: $( '.theme-tabs .toggle-content' ).get(0) }, true );
			else
				$( '.theme-tabs' ).find( '.toggle-content' ).removeClass( 'support' ).addClass( 'about' ).click();

			// replace bookmarked #support hashed URLs
			if ( $.support.pushState && hash === 'support' && ! hasSupportSegment )
				history.replaceState( {}, '', window.location.pathname.replace(/\/$/, '') + '/support/' );
		},
		onPop: function( event ) {
			var state = event.originalEvent.state;
			if ( ! state )
				return;
			this.toggleSupport( { target: $( '.theme-tabs .toggle-content' ).get(0) }, true );
		},
		generateTOC: function() {
			var sections = this.$supportDoc.find( '> p > strong' );
			var tocContainer, tocContainerList;

			// no sections? bail.
			if ( ! sections.length )
				return;

			tocContainer = $( '<div/>' ).addClass( 'toc' );
			tocContainer.append( $( '<h1 class="widget-title"/>' ).text( 'Table of Contents' ) );

			tocContainerList = $( '<ol/>' );
			tocContainer.append( tocContainerList );

			sections.each( function () {
				var title = $( this ).text();

				// Only use <strong>s that are the only thing in their parent paragraph
				// as section titles
				if ( $( this ).parent().text() != title )
					return;

				var normalizedTitle = title.replace( /[^a-z0-9 ]/ig, '' ).replace( /\s/g, '_' );

				$( this ).attr( 'id', normalizedTitle );

				tocContainerList.append(
					$( '<li/>' ).append(
						$( '<a />' )
							.attr( 'href', '#' + normalizedTitle )
							.text( title )
					)
				);
			} );
			if ( tocContainerList.children().length )
				tocContainer.prependTo( $( '#support-sidebar' ) );

		},
		toggleSupport: function( event, noPush ) {
			var $el = $( event.target );
			var isSupport = $el.hasClass( 'support' );
			var url;
			if ( isSupport ) {
				$el.removeClass( 'support' ).addClass( 'about' ).text( 'About' );
				$( '.entry-content.support-content, .support-sidebar' ).show();
				$( '.entry-content.theme-content, .theme-sidebar' ).hide();
			} else {
				$el.removeClass( 'about' ).addClass( 'support' ).text( 'Support' );
				$( '.entry-content.support-content, .support-sidebar' ).hide();
				$( '.entry-content.theme-content, .theme-sidebar' ).show();
			}
			if ( ! noPush && $.support.pushState ) {
				url = isSupport
					? window.location.pathname.replace(/\/$/, '') + '/support/'
					: window.location.pathname.replace(/\/support\/?$/, '/');
				history.pushState( {url: url}, '', url );
			}
		},
		activate: function( event ) {
			var blog_id = parseInt( this.$activateOnBlog.val(), 10 );
			event.preventDefault();
			if ( blog_id > 0 )
				$( '#activate-theme' ).submit();
		},
		maybeShowActivateButton: function( event ) {
			if ( this.$activateOnBlog.val() > 0 )
				this.$activateButton.removeClass( 'inactive' );
			else
				this.$activateButton.addClass( 'inactive' );
		},
		activateOverlay: function( event ) {
			$( '#activate-overlay' ).addClass( 'active' );
			$( 'body' ).addClass( 'overlay-active' );
			event && event.preventDefault();
		},
		deactivateOverlay: function( event ) {
			$( '#activate-overlay' ).removeClass( 'active' );
			$( 'body' ).removeClass( 'overlay-active' );
			event.preventDefault();
		},
		mobileUI: function() {
			$( '#mobile-more-actions' ).on( 'click', function() {
				$( 'body' ).toggleClass( 'mobile-theme-actions' );
			});
		},
		stats: function( event ) {
			var theme, helpLink;

			// Log support-forum clicks: 'premium-theme-forum-link'
			// Tracks each theme link separately to compare them
			$( '.theme-support-forum a' ).on( 'click', function() {
				theme = $( this ).attr( 'title' );
				bumpStatsExtras( 'premium-theme-forum-link', theme );
			});

			// Track activity of footer help links
			$( '.help-area' ).on( 'click', 'ul a', function() {
				helpLink = $( this ).data( 'title' );

				// Stat: 'showcase-footer-links'
				bumpStatsExtras( 'showcase-footer-links', helpLink );
			});
		}
	}

	var ThemeNav = {
		defaults: {
			'sort' : 'trending',
			'features': []
		},
		init: function() {
			$.support.replaceState = history.replaceState != null;
			// @todo maybe implement pushState - probably just want to go Backbone at that point.
			// if ( $.support.pushreplaceStateState )
			// 	$( window ).on( 'popstate', _.bind( this.onPop, this ) );
			this.params = $.extend({},
				this.defaults,
				{
					sort: $( '#theme-grid .view-links .current' ).data( 'sort' ),
				},
				$.deparam( $( '#theme-filters' ).serialize() )
			);
		},
		get: function( key ) {
			if ( key != null )
				return this.params[key];
			return this.params;
		},
		set: function( key, value ) {
			var oldValue = this.get( key );
			var doNav = oldValue !== value;
			var newValue;

			if ( $.isArray( oldValue ) && ! $.isArray( value ) ) {
				newValue = _.union( oldValue, [ value ] );
				doNav = ( newValue.length !== oldValue.length && -1 === _.indexOf( oldValue, value ) );
				value = newValue;
			}
			this.params[ key ] = value;
			if ( doNav )
				this.navigate();
		},
		remove: function( key, value ) {
			var newValue;
			if ( this.get( key ) == null )
				return;

			if ( value != null ) {
				if ( $.isArray( this.get( key ) ) )
					return this.set( key, _.without( this.get( key ), value ) );
				if ( this.get( key ) != value )
					return;
			}
			if ( this.defaults[ key ] != null )
				newValue = this.defaults[ key ];
			this.set( key, newValue );
		},
		navigate: function() {
			ThemeScroller.newQuery();
			if ( $.support.replaceState )
				this.updateURL();
		},
		onPop: function( event ) {
			event = event.originalEvent;
			if ( event.state ) {
				this.params = event.state;
				ThemeScroller.newQuery();
			}
		},
		updateURL: function() {
			var path = '/themes/';
			var hasSort = this.get( 'sort' ) !== this.defaults.sort;
			var hasFeatures = !! this.get( 'features' ).length;
			var hasSearch = !! this.get( 'theme-search' ).length;
			if ( hasSort && ! hasFeatures )
				path += 'sort/' + this.get( 'sort') + '/';
			if ( hasFeatures )
				path += 'features/' + this.get( 'features' ).join( '+' ) + '/';
			if ( hasSort && hasFeatures )
				path += '?sort=' + this.get( 'sort' );
			if ( hasSearch ) {
				if ( ! ( hasSort || hasFeatures ) ) {
					path += 'search/' + this.get( 'theme-search' ) + '/';
				} else {
					if ( ! ( hasSort && hasFeatures ) )
						path += '?';
					else
						path += '&';
					path += 'theme-search=' + this.get( 'theme-search' );
				}
			}
			if ( path === '/themes/' )
				path = '/';

			history.replaceState( {}, path, path );
		}
	};

	var ShowcaseFilters = {
		init: function() {
			this.$featureGroups = $('.feature-group');
			this.$themeGrid = $("#theme-grid");
			this.$themeForm = $("#theme-filters");
			this.addListeners();
			this.updateFeatureSectionNumbers( true );
			this.stats();
		},
		addListeners: function() {
			$( '#filter-headings' ).on( 'click', 'a', _.bind( this.filterSwitcher, this ) );
			// Avoid toggling filters when you click the ? to get help text.
			$( '.filter-context' ).on( 'click', 'a', function( event ) { event.preventDefault(); });
			// Toggle the Find a Theme Box
			$( '#theme-viewer .toggle' ).click( _.bind( this.themeViewerToggle, this ) );
			// hijack sorting links
			this.$themeGrid.on( 'click', '.view-links a', _.bind( this.sortBySwitch, this ) );
			this.$themeForm
				// hijack form submission
				.on( 'submit', _.bind( this.formSubmit, this ) )
				// hijack filter clicks
				.on( 'change', '[type="checkbox"]', _.bind( this.filterChange, this ) );
			// Make clicking overlays go to theme page
			this.$themeGrid.on('click', '.theme-overlay', this.overlayClicksGoToThemePage );
			this.featureInfo();
		},
		formSubmit: function( event ) {
			ThemeNav.set( 'theme-search', $( '#theme-search' ).val() );
			event.preventDefault();
		},
		filterChange: function( event ) {
			//ThemeScroller.newQuery();
			var $checkbox = $( event.target );
			var val = $checkbox.val();
			if ( $checkbox.is( ':checked' ) )
				ThemeNav.set( 'features', val );
			else
				ThemeNav.remove( 'features', val );
			this.updateFeatureSectionNumbers();
		},
		updateFeatureSectionNumbers: function( init ) {
			var checked = this.$themeForm.find(':checked');
			var labels = $("#filter-headings").find('.filter');
			// reset
			labels.data( 'count', 0 );
			if ( init === true ) {
				labels.each(function() {
					var me = $(this);
					me.data( 'label', me.text() );
				});
			}

			checked.each(function() {
				var group = $(this).closest('.feature-group');
				var label = labels.filter('[data-group-target="#' + group.attr("id") + '"]');
				label.data( 'count', label.data('count') + 1 );
			});

			labels.each(function() {
				var me = $(this);
				var data = me.data();
				var label = data.label;
				if ( data.count && data.count > 0 )
					label += ' (' + data.count + ')';

				me.text( label );
			});
		},
		filterSwitcher: function( event ) {
			var $target = $( $( event.target ).data( 'groupTarget' ) );
			// hide 'em all
			this.$featureGroups.addClass( 'hidden' );
			// show ours
			$target.removeClass( 'hidden' );
			// highlight current filter
			$( '#filter-headings' ).find( 'li a' ).removeClass( 'current' );
			$( event.target ).addClass( 'current' );
		},
		themeViewerToggle: function( event ) {
			var arrow = $( event.target ).find( 'i' );
			var dir = arrow.hasClass( 'noticon-downarrow' ) ? 'uparrow' : 'downarrow';
			arrow.attr( 'class', 'noticon noticon-' + dir );
			$( '#toggle' ).slideToggle();
			event.preventDefault();
		},
		sortBySwitch: function( event ) {
			this.$themeGrid.find( '.view-links a' ).removeClass('current');
			$( event.target ).addClass('current');
			//ThemeScroller.newQuery();
			ThemeNav.set( 'sort', $( event.target ).data( 'sort' ) );
			event.preventDefault();
		},
		overlayClicksGoToThemePage: function(event) {
			if ( $(event.target).hasClass('theme-overlay') )
				window.location = $(this).find('.button-primary').attr("href");
		},
		featureInfo: function( event ) {
			var text;
			// When clicking on feature-filters ? icon
			$( '.filter-context' ).on( 'click', 'a', function() {
				text = $( this ).attr( 'title' );
				if ( $( '.feature-info' ) )
					$( '.feature-info' ).remove();
				// Print feature text
				$( '#group-features' ).append( '<p class="feature-info">' + text + '</div>' );
			});
		},
		stats: function() {
			var sort;
			// Track clicks to single theme pages
			// Stat: 'showcase-home-actions@theme'
			this.$themeGrid.on( 'click', '.theme-overlay, .button-primary', function( event ) {
				bumpStatsExtras( 'showcase-home-actions', 'theme' );
				event.stopPropagation();
			});

			// Track clicks to demo sites
			// Stat: 'showcase-home-actions@theme-demo'
			this.$themeGrid.on( 'click', '.theme-demo', function() {
				bumpStatsExtras( 'showcase-home-actions', 'theme-demo' );
			});

			// Track clicks to the signup-activate flow
			// Stat: 'showcase-home-actions@theme-sign-activate'
			this.$themeGrid.on( 'click', '.signup', function() {
				bumpStatsExtras( 'showcase-home-actions', 'theme-sign-activate' );
			});

			// Track clicks to sort views
			// Stat: 'showcase-home-actions@sort'
			this.$themeGrid.on( 'click', '.view-links a', function() {
				bumpStatsExtras( 'showcase-home-actions', 'sort' );
			});

			// Track clicks on filters toggle
			// Stat: 'showcase-home-actions@filters'
			$( '#theme-viewer' ).on( 'click', '.toggle', function() {
				bumpStatsExtras( 'showcase-home-actions', 'filters' );
			});

			// This counts home pageviews so we can compare with infinite scroll pageviews on the same bucket
			bumpStatsExtras( 'showcase-scroll-views', 'home' );

			// Track the different sorting link views
			this.$themeGrid.on( 'click', '.view-links a', function() {
				sort = $( this ).data( 'sort' );
				bumpStatsExtras( 'showcase-sort-views', sort );
			});
		}
	}

	/**
	 * Class that provides infinite scroll for Theme Showcase
	 *
	 * Adapted/modified from WP Core admin themes browser
	 *
	 */
	var ThemeScroller = {
		querying: false,
		scrollPollingDelay: 500,
		failedRetryDelay: 4000,
		totalRetries: 3,
		outListBottomThreshold: 400,

		/**
		 * Initializer
		 *
		 * @since 3.4
		 * @access private
		 */
		init: function( reset ) {
			var self = this;

			// Get out early if we don't have the required arguments.
			if ( typeof themeShowcase === 'undefined' ||
				 typeof themeShowcase.ajaxUrl === 'undefined' ) {
					return;
			}

			this.removeMessage();

			// Handle inputs
			this.nextPage = reset ? 1 : parseInt( themeShowcase.currentPage ) + 1;
			this.totalPages = themeShowcase.totalPages;
			this.exclude = reset ? [] : themeShowcase.ids;

			// Cache jQuery selectors
			if ( ! reset ) {
				this.$outList = $("#theme-grid");
				this.$form = $("#theme-filters");
				this.$window = $(window);
				this.$document = $(document);
				this.$sorts = this.$outList.find(".view-links a");
			} else {
				// ditch feature description
				// @todo maintain if we keep the same feature
				$(".browse-description").remove();
			}

			/**
			 * If there are more pages to query, then start polling to track
			 * when user hits the bottom of the current page
			 */
			if ( this.totalPages >= this.nextPage )
				this.pollInterval =
					setInterval( function() {
						return self.poll();
					}, this.scrollPollingDelay );
		},

		/**
		 * Checks to see if user has scrolled to bottom of page.
		 * If so, requests another page of content from self.ajax().
		 *
		 * @since 3.4
		 * @access private
		 */
		poll: function() {
			var bottom = this.$document.scrollTop() + this.$window.innerHeight();

			if ( this.querying ||
				( bottom < this.$outList.height() - this.outListBottomThreshold ) )
				return;

			this.ajax();
		},

		/**
		 * Applies results passed from this.ajax() to $outList
		 *
		 * @since 3.4
		 * @access private
		 *
		 * @param results Array with results from this.ajax() query.
		 */
		process: function( results ) {
			if ( results === undefined ) {
				clearInterval( this.pollInterval );
				return;
			}

			if ( results.type === 'empty' ) {
				this.noResultsMessage();
				this.updateBrowseTitle( { foundThemes: 0 } );
				clearInterval( this.pollInterval );
			}

			this.totalPages = results.totalPages;

			if ( this.nextPage > this.totalPages ) {
				this.showMessage( themeShowcase.noThemesRemaining );
				clearInterval( this.pollInterval );
			}

			if ( this.nextPage <= ( this.totalPages + 1 ) ) {
				this.updateBrowseTitle( results );
				this.$outList.append( results.html );
			}

		},

		updateBrowseTitle: function( results ) {
			if ( results === undef || results.foundThemes === undef )
				return $("#browse-title").text('');

			var checked = $("#theme-filters").find(":checked");
			var text = '';
			var labels = [];
			var template = results.foundThemes === 1 ? themeShowcase.browseTitleTemplateSingular : themeShowcase.browseTitleTemplate;
			// labels
			checked.each(function() {
				labels.push( $(this).parent().text() );
			});

			text = template.replace('%1$s', results.foundThemes).replace('%2$s', labels.join(' + ') );

			$("#browse-title").html( text );
		},

		/**
		 * Queries next page of themes
		 *
		 * @since 3.4
		 * @access private
		 */
		ajax: function( retry ) {
			var self = this;
			retry = retry === undef ? this.totalRetries : undef;
			this.querying = true;

			var query = $.extend( {
				action: themeShowcase.action,
				paged: this.nextPage,
				exclude: this.exclude
			}, ThemeNav.get() );

			this.showSpinner();
			this.jqxhr = $.getJSON( themeShowcase.ajaxUrl, query )
				.done( function( response ) {
					// Stat: 'page-$number'
					bumpStatsExtras( 'showcase-scroll-views', 'page-' + self.nextPage );
					self.nextPage++;
					response.ids && $.merge( self.exclude, response.ids );
					self.process( response );
					self.hideSpinner();
					self.querying = false;
				})
				.fail( function( jqXHR, textStatus ) {
					self.hideSpinner();
					clearInterval( self.pollInterval );
					self.querying = false;
					self.showMessage( themeShowcase.errorMsg );
					// my retry logic hath failed. revisit.
					//// only retry if we didn't abort
					//if ( textStatus !== 'abort' && retry > 0 ) {
					//	// Let's not retry forever
					//	retry --;
					//	setTimeout( function() { self.ajax( retry ); }, self.failedRetryDelay );
					//}	else {
					//	clearInterval( self.pollInterval );
					//	self.hideSpinner();
					//}

				});
		},

		newQuery: function() {
			// if we're currently querying, clear it.
			if ( this.querying )
				this.jqxhr.abort();

			if ( this.pollInterval )
				clearInterval( this.pollInterval );

			// empty the container
			this.$outList.find('.theme').remove();
			// empty the title
			this.updateBrowseTitle();
			// restart
			this.init(true);
			// fire right away to avoid polling lag
			this.ajax();
		},

		showSpinner: function() {
			this.spinner = $( '<div class="ts-spinner" />' ).appendTo( this.$outList ).spin( 'large', '#666' );
		},

		hideSpinner: function() {
			this.spinner.remove && this.spinner.remove();
		},

		showMessage: function( string ) {
			this.removeMessage();
			this.msg = $("<div class='is-message' />").html( string ).insertAfter( this.$outList );
		},

		removeMessage: function( string ) {
			if ( this.msg )
				this.msg.remove();
		},

		noResultsMessage: function() {
			var msg =  this.$sorts.filter('.current[data-sort="premium"]').length
				? themeShowcase.limitPrompt
				: themeShowcase.noneFound;
			this.showMessage( msg );
		}
	};

	$( document ).ready( _.bind( ThemeShowcase.init, ThemeShowcase ) );

	// From: https://github.com/cowboy/jquery-bbq/
	//
	// Method: jQuery.deparam
	//
	// Deserialize a params string into an object, optionally coercing numbers,
	// booleans, null and undefined values; this method is the counterpart to the
	// internal jQuery.param method.
	//
	// Usage:
	//
	// > jQuery.deparam( params [, coerce ] );
	//
	// Arguments:
	//
	// params - (String) A params string to be parsed.
	// coerce - (Boolean) If true, coerces any numbers or true, false, null, and
	// undefined to their actual value. Defaults to false if omitted.
	//
	// Returns:
	//
	// (Object) An object representing the deserialized params string.

	$.deparam = function( params, coerce ) {
		var obj = {},
			coerce_types = { 'true': !0, 'false': !1, 'null': null },
			decode = decodeURIComponent;

		// Iterate over all name=value pairs.
		$.each( params.replace( /\+/g, ' ' ).split( '&' ), function(j,v){
			var param = v.split( '=' ),
				key = decode( param[0] ),
				val,
				cur = obj,
				i = 0,

				// If key is more complex than 'foo', like 'a[]' or 'a[b][c]', split it
				// into its component parts.
				keys = key.split( '][' ),
				keys_last = keys.length - 1;

			// If the first keys part contains [ and the last ends with ], then []
			// are correctly balanced.
			if ( /\[/.test( keys[0] ) && /\]$/.test( keys[ keys_last ] ) ) {
				// Remove the trailing ] from the last keys part.
				keys[ keys_last ] = keys[ keys_last ].replace( /\]$/, '' );

				// Split first keys part into two parts on the [ and add them back onto
				// the beginning of the keys array.
				keys = keys.shift().split('[').concat( keys );

				keys_last = keys.length - 1;
			} else {
				// Basic 'foo' style key.
				keys_last = 0;
			}

			// Are we dealing with a name=value pair, or just a name?
			if ( param.length === 2 ) {
				val = decode( param[1] );

				// Coerce values.
				if ( coerce ) {
					val = val && !isNaN(val) ? +val // number
						: val === 'undefined' ? undefined // undefined
						: coerce_types[val] !== undefined ? coerce_types[val] // true, false, null
						: val; // string
				}

				if ( keys_last ) {
					// Complex key, build deep object structure based on a few rules:
					// * The 'cur' pointer starts at the object top-level.
					// * [] = array push (n is set to array length), [n] = array if n is
					// numeric, otherwise object.
					// * If at the last keys part, set the value.
					// * For each keys part, if the current level is undefined create an
					// object or array based on the type of the next keys part.
					// * Move the 'cur' pointer to the next level.
					// * Rinse & repeat.
					for ( ; i <= keys_last; i++ ) {
						key = keys[i] === '' ? cur.length : keys[i];
						cur = cur[key] = i < keys_last
							? cur[key] || ( keys[i+1] && isNaN( keys[i+1] ) ? {} : [] )
							: val;
					}

				} else {
					// Simple key, even simpler rules, since only scalars and shallow
					// arrays are allowed.

					if ( $.isArray( obj[key] ) ) {
						// val is already an array, so push on the next value.
						obj[key].push( val );

					} else if ( obj[key] !== undefined ) {
						// val isn't an array, but since a second value has been specified,
						// convert val into an array.
						obj[key] = [ obj[key], val ];

					} else {
						// val is a scalar.
						obj[key] = val;
					}
				}

			} else if ( key ) {
				// No value was defined, so set something meaningful.
				obj[key] = coerce
					? undefined
					: '';
			}
		});

		return obj;
	};

})(jQuery);;
