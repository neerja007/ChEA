<!DOCTYPE html>
<html><head>
<meta http-equiv="content-type" content="text/html; charset=UTF-8">
		<meta charset="UTF-8">
		<title>Google+ sign-in iframe</title>
		<script async="" src="a_data_002/cbgapi.loaded_1"></script><script async="" src="a_data_002/cbgapi.loaded_0"></script><script type="text/javascript" src="a_data_002/postmessage.js"></script>
		<script type="text/javascript" src="a_data_002/jquery.js"></script>
	</head>
	<body style="margin: 0; padding: 0;">

		<style type="text/css">
			div#customButton {
				display: inline-block;
				background: transparent;
				width: 16px;
				height: 16px;
				opacity: 0.8;
				margin: 4px;
				padding: 0;
			}
			div#customButton:hover {
				cursor: pointer;
				opacity: 1.0;
			}
			#customButton span.icon {
				background: url('//s0.wp.com/wp-content/mu-plugins/post-flair/sharing/images/googleplus1.png') transparent center center no-repeat;
				display: inline-block;
				width: 16px;
				height: 16px;
			}
			#customButton span.buttonText {
				display: none;
			}
		</style>

		<script type="text/javascript">
			var googlePlusButtonHasBeenClicked = false;

			/**
			 * On ready, bind a click handler to our custom button - this click handler will
			 * not be the only one - google will add their own in googlePlusButtonRender too
			 * But this way we can know when the user has initiated a Google+ login
			 * so we can display the loading graphic in the highlander comment form
			 */
			jQuery( document ).ready( function() {
				googlePlusButtonHasBeenClicked = false;
				jQuery( '#customButton' ).click( googlePlusOnClickCustomButton );
			} );

			/**
			 * Let our parent know the user clicked on the Google+ button
			 */
			function googlePlusOnClickCustomButton() {
				googlePlusButtonHasBeenClicked = true;

				pm( {
					target: window.parent,
					type: 'googlePlusButtonClick',
					data: 0,
					origin: '*'
				} );
			}

			/**
			 * This callback is hit 1) when the Google library has rendered the custom button
			 * and completed an initial autonomous check for auth and 2) when the user completes
			 * a login
			 *
			 * At this point, we only want to notify the parent in case #2 - and this avoids
			 * us firing up a userinfo.get on every page load by an auth'd user
			 */
			function googlePlusSignInCallback( authResult ) {
				if ( googlePlusButtonHasBeenClicked ) {
					if ( 'undefined' != typeof authResult.error ) {
						googlePlusSignInEvent( { error: authResult.error } );
					} else {
						jQuery.when( googlePlusGetProfile(), googlePlusGetEmail() ).done( function( profileArgs, emailArgs) {
							var data = {};
							data.code = authResult.code;
							data.access_token = authResult.access_token;
							data.name = profileArgs.displayName;
							data.avatar = profileArgs.image.url;
							data.link = profileArgs.url;
							data.uid = profileArgs.id;
							data.email = emailArgs.email;
							googlePlusSignInEvent( data );
						} );
					}
				}
			}

			/**
			 * Fetch the user's profile
			 */
			function googlePlusGetProfile() {
				var dfd = jQuery.Deferred();
				gapi.client.load( 'plus', 'v1', function() {
					var request = gapi.client.plus.people.get( { userId: 'me' } );
					request.execute( function( resp ) {
						dfd.resolve( resp );
					} );
				} );
				return dfd.promise();
			}

			/**
			 * Fetch the user's email
			 */
			function googlePlusGetEmail() {
				var dfd = jQuery.Deferred();
				gapi.client.load('oauth2', 'v2', function() {
					var request = gapi.client.oauth2.userinfo.get();
					request.execute( function( resp ) {
						dfd.resolve( resp );
					} );
				} );
				return dfd.promise();
			}
			/**
			 * Utility function to send sign in events to the parent of this iframe
			 */
			function googlePlusSignInEvent( data ) {
				pm( {
					target: window.parent,
					type: 'googlePlusSignIn',
					data: data,
					origin: '*'
				} );
			}

			/**
			 * Render the button (attaches Google+ click and auth callbacks)
			 */
			function googlePlusButtonRender() {
				gapi.signin.render( 'customButton', {
					'callback': 'googlePlusSignInCallback',
					'clientid': '108380595987-4e427srhd9jr0lsnohleutb2ilbuof70.apps.googleusercontent.com',
					'cookiepolicy': 'single_host_origin',
					'scope': 'https://www.googleapis.com/auth/plus.login https://www.googleapis.com/auth/userinfo.email',
					'accesstype' : 'offline',
					'requestvisibleactions' : 'http://schemas.google.com/CreateActivity'
				} );

			}
		</script>
		<script gapi_processed="true" type="text/javascript" src="a_data_002/clientplusone.js"></script>

		<div data-gapiattached="true" id="customButton">
			<span class="icon"></span>
			<span class="buttonText"></span>
		</div>
	

<iframe style="width: 1px; height: 1px; position: absolute; top: -100px;" src="a_data_002/postmessageRelay.htm" id="oauth2relay864146362" name="oauth2relay864146362"></iframe><iframe style="width: 1px; height: 1px; position: absolute; left: -100px;" src="a_data_002/auth.htm"></iframe></body></html>